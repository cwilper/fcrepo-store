<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd"
       default-lazy-init="true">
  <!--
    Command: copy

    Purpose:
      Copy objects from one store to another, with or without managed
      datastream content. The specified filter may modify or omit objects.

    Usage:
      > copy <source> <pids> <filter> <with-content> <destination>

    Where:
      <source> is the id of the source FedoraStore (see stores/*.xml)
      <pids>   is either a) one or more literal pids, comma-separated.
                         b) the path to a file containing pids, one per line.
                         c) 'all', meaning all objects.
      <filter> is either a) 'unfiltered', meaning no filtering will be applied.
                         b) the id of any other Filter<FedoraObject>
                            (see filters/*.xml)
      <with-content> is true if managed datastream content should be copied;
                     false otherwise
      <overwrite>    is true if existing objects in the destination should be
                     replaced, false if they should be left alone.
      <destination>  is the id of the destination FedoraStore

    Examples:
      Copy all objects and content from 'legacy' to 'akubra'.
        > copy legacy all unfiltered true akubra

      Copy two specific objects, omitting content, from 'legacy' to 'akubra'
        > copy legacy demo:Object1,demo:Object2 unfiltered false akubra
  -->
  <bean id="copy"
      class="com.github.cwilper.fcrepo.store.util.commands.CopyCommand">
    <constructor-arg ref="${arg1}"/>
    <constructor-arg>
      <bean class="com.github.cwilper.fcrepo.store.util.PIDSpec">
        <constructor-arg value="${arg2}"/>
      </bean>
    </constructor-arg>
    <constructor-arg ref="${arg3}"/>
    <constructor-arg type="boolean" value="${arg4}"/>
    <constructor-arg type="boolean" value="${arg5}"/>
    <constructor-arg ref="${arg6}"/>
  </bean>
</beans>